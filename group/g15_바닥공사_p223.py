"""
|
    ||
        |||
            ||||
            ||--
            ||ㅁ
        |--
            |--|
        |ㅁ
            |ㅁ|
    --
        --|
            --||
            ----
            --ㅁ
    ㅁ
        ㅁ|
            --||
            ----
            --ㅁ

t 1  3   5     11
n 0  2   2      6
y 1  1   3      5

y(n+1) = y(n)+n(n)
n(n+1) = y(n) * 2
t(n+1) = 3y(n)+n(n)
"""
n = int(input())

yList = [0] * (n + 1)
nList = [0] * (n + 1)

yList[1] = 1
nList[1] = 0

for i in range(2, n + 1):
    nList[i] = yList[i-1] * 2
    yList[i] = yList[i-1] + nList[i-1]

print((yList[n] + nList[n]) % 796796)


"""
문제 : p223_바닥공사
시간 : 17분

접근 :
마지막 타일이 | 모양일떄와 아닐때 규칙을 찾아 두개의 점화식으로 품


다른 사람 풀이 :
========================================================================================
해설 :
i는 i-1일떄 2*1 덮개 하나로만 채울 수 있고
i는 i-2일때 1*2 덮개 두개 혹은 2*2 덮개로만 채울 수 있는 규칙으로 점화식을 만든 풀이

# 정수 N을 입력 받기
n = int(input())

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 1001

# 다이나믹 프로그래밍(Dynamic Programming) 진행 (보텀업)
d[1] = 1
d[2] = 3
for i in range(3, n + 1):
    d[i] = (d[i - 1] + 2 * d[i - 2]) % 796796

# 계산된 결과 출력
print(d[n])
========================================================================================

노트 :
- 점화식 구할때 탑다운 방식으로 접근하는 것도 도움됨
"""